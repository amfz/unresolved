<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on unresolved</title>
    <link>/</link>
    <description>Recent content in Home on unresolved</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Jun 2017 18:27:58 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tearing off the band-aid</title>
      <link>/post/first-post/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/first-post/</guid>
      <description>Gotta write a first post sometime.</description>
    </item>
    
    <item>
      <title>Special Character Test</title>
      <link>/post/special-character-test-demo/</link>
      <pubDate>Tue, 10 Sep 2019 20:26:08 -0500</pubDate>
      
      <guid>/post/special-character-test-demo/</guid>
      <description>Testing out GitHub issue https://github.com/zwbetz-gh/cupper-hugo-theme/issues/16
Cette phrase prononcée par Greta Thunberg</description>
    </item>
    
    <item>
      <title>Katex Math Typesetting</title>
      <link>/post/katex-math-typesetting/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/katex-math-typesetting/</guid>
      <description>Enable Katex in the config file by setting the katex param to true. This will import the necessary Katex CSS/JS.
Note: Use the online reference of supported TeX functions.
Some math:
$$ \varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887… $$$$ \varphi = \dfrac{1+\sqrt5}{2}= 1.6180339887… $$
More math:
$$\varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } } $$$$ \varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } } $$</description>
    </item>
    
    <item>
      <title>Cupper Shortcodes</title>
      <link>/post/cupper-shortcodes/</link>
      <pubDate>Tue, 12 Feb 2019 23:39:06 -0600</pubDate>
      
      <guid>/post/cupper-shortcodes/</guid>
      <description>blockquote {{&amp;lt; blockquote author=&amp;quot;Carl Jung&amp;quot; &amp;gt;}} Even a happy life cannot be without a measure of darkness, and the word happy would lose its meaning if it were not balanced by sadness. It is far better to take things as they come along with patience and equanimity. {{&amp;lt; /blockquote &amp;gt;}}   Even a happy life cannot be without a measure of darkness, and the word happy would lose its meaning if it were not balanced by sadness.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/post/creating-a-new-theme-demo/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-new-theme-demo/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>aaaaaaaaaaaa</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/post/goisforlovers-demo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/goisforlovers-demo/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/post/hugoisforlovers-demo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/hugoisforlovers-demo/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
  </channel>
</rss>